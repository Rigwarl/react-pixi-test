{"version":3,"sources":["bunny.png","Camera.tsx","App.tsx","index.tsx"],"names":["module","exports","Camera","PixiComponent","create","viewport","Viewport","screenWidth","screenHeight","worldWidth","worldHeight","on","console","log","clamp","direction","drag","pinch","wheel","applyProps","instance","oldProps","newProps","didMount","willUnmount","App","className","image","bunnyPng","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4GAAAA,EAAOC,QAAU,IAA0B,mC,6JCoC5BC,EAjCAC,wBAAc,WAAY,CACvCC,OAAQ,WACN,IAAMC,EAAW,IAAIC,IAAS,CAC5BC,YAAa,IACbC,aAAc,IACdC,WAAY,IACZC,YAAa,MAcf,OAVAL,EAASM,GAAG,cAAc,kBAAMC,QAAQC,IAAI,iBAC5CR,EAASM,GAAG,YAAY,kBAAMC,QAAQC,IAAI,eAE1CR,EAASS,MAAM,CAAEC,UAAW,QAC5BV,EACGW,OACAC,QACAC,QAGIb,GAETc,WAAY,SAACC,EAAUC,EAAUC,GAC/BV,QAAQC,IAAI,eAEdU,SAAU,WACRX,QAAQC,IAAI,aAEdW,YAAa,WACXZ,QAAQC,IAAI,kB,iBCdDY,MAZf,WACE,OACE,yBAAKC,UAAU,OACb,kBAAC,QAAD,KACE,kBAAC,EAAD,KACE,kBAAC,SAAD,CAAQC,MAAOC,UCNzBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.c291a844.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bunny.c2e5d0c0.png\";","import { Viewport } from 'pixi-viewport';\nimport { PixiComponent } from '@inlet/react-pixi';\n\nconst Camera = PixiComponent('Viewport', {\n  create: () => {\n    const viewport = new Viewport({\n      screenWidth: 800,\n      screenHeight: 600,\n      worldWidth: 1000,\n      worldHeight: 800,\n      // ticker: props.app.ticker,\n      // interaction: props.app.renderer.plugins.interaction, // the interaction module is important for wheel to work properly when renderer.view is placed or scaled\n    });\n    viewport.on('drag-start', () => console.log('drag-start'));\n    viewport.on('drag-end', () => console.log('drag-end'));\n    \n    viewport.clamp({ direction: 'all' });\n    viewport\n      .drag()\n      .pinch()\n      .wheel();\n      // .decelerate();\n\n    return viewport;\n  },\n  applyProps: (instance, oldProps, newProps) => {\n    console.log('applyProps');\n  },\n  didMount: () => {\n    console.log('didMount');\n  },\n  willUnmount: () => {\n    console.log('willUnmount');\n  },\n});\n\nexport default Camera;\n","import React from 'react';\nimport { Stage, Sprite } from '@inlet/react-pixi'\nimport Camera from './Camera';\n\nimport bunnyPng from './bunny.png';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Stage>\n        <Camera>\n          <Sprite image={bunnyPng} />\n        </Camera>\n      </Stage>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}